//plugins {
//	id 'java'
////	id 'org.springframework.boot' version '3.4.5'
//	id 'org.springframework.boot' version '3.2.6' // 널리 사용되는 안정적인 버전입니다.
//
//	id 'io.spring.dependency-management' version '1.1.7'
//}
//
//group = 'com.kdt.yts'
//version = '0.0.1-SNAPSHOT'
//
//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(17)
//	}
//}
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}
//
//repositories {
//	mavenCentral()
//	// Spring AI 라이브러리 저장소 추가
//	maven {
//		url = uri("https://repo.spring.io/milestone")
//	}
//}
//
//// Spring AI 의존성 버전 관리를 위한 BOM (Bill of Materials) 설정
//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.ai:spring-ai-bom:1.0.0-M6"
//	}
//}
//
//
//dependencies {
//	// Spring Boot Starter
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//    testImplementation 'io.projectreactor:reactor-test'
//
//	// DB 관련 의존성
//	implementation 'com.mysql:mysql-connector-j:8.2.0' // MySQL Connector/J 8.2.0 버전 사용
//	runtimeOnly 'com.h2database:h2'                         // 테스트용 인메모리 H2 DB
//
//	// Lombok
//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'
//
//	//  Spring AI - OpenAI 연동 (버전은 BOM에서 관리됨) -> 직접 호출 방식으로 변경되어 제거
//	// implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
//
//	// Jakarta 기반 표준 API
//	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
//	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
//
//	// 개발 편의성 도구
//	//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//
//	// 인증/보안 (OAuth2)
//	// Spring Security (기본 웹 보안 + 인가 설정용)
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//
//	// OAuth2 클라이언트 (구글 로그인 등)
//	implementation 'com.google.api-client:google-api-client:2.2.0'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//
//	// JWT 토큰 처리
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//
//	// 이메일 발송 기능을 위한 Spring Boot Starter Mail
//	implementation 'org.springframework.boot:spring-boot-starter-mail'
//
//	// OpenAI
//	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
//
//	// XML 파싱
//	implementation 'javax.xml.bind:jaxb-api:2.3.1'
//	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
//
//	//  서블릿 API
//	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
//
//	// Swagger UI
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'
//
//	// 테스트 관련 의존성
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'com.mysql:mysql-connector-j'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	testImplementation 'org.mockito:mockito-core:5.11.0'
//	testImplementation 'com.jayway.jsonpath:json-path:2.9.0'
//	testImplementation 'org.springframework.boot:spring-boot-starter-web'
//	testImplementation 'org.springframework.security:spring-security-test'
//
//
//	// 유효성 검사 (jakarta.validation 어노테이션 사용 시 필요)
//
//	// JPA 어노테이션 관련 의존성 추가 -> spring-boot-starter-data-jpa에 포함되어 있음
//	//	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//
//	// 유효성 검사 관련 -> spring-boot-starter-validation에 포함되어 있음
//	//	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
//
//
//	// YouTube API
//	implementation 'com.google.api-client:google-api-client:1.33.0'
//	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
//	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0' // YouTube 라이브러리
//	implementation 'com.google.http-client:google-http-client-jackson2:1.41.5'
//
//	//S3
//	implementation platform('software.amazon.awssdk:bom:2.20.27')
//	implementation 'software.amazon.awssdk:s3'
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
plugins {
	id 'java'
	// ⭐️⭐️⭐️ 불안정한 3.4.5 버전 대신, 검증된 최신 안정 버전인 3.2.6 으로 변경합니다. ⭐️⭐️⭐️
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.kdt.yts'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// ⭐️ 의존성들을 Spring Boot 3.2.6 버전에 맞게 재정렬하고 정리합니다.
dependencies {
	// Spring Web & JPA (핵심 웹/데이터베이스 기능)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// ⭐️⭐️⭐️ 컴파일 오류 해결을 위해 빠져있던 의존성을 다시 추가합니다. ⭐️⭐️⭐️
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Security (JWT & OAuth2)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// OpenAI
	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'

	// AWS S3
	implementation platform('software.amazon.awssdk:bom:2.20.27')
	implementation 'software.amazon.awssdk:s3'

	// Google API
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'
	implementation 'com.google.api-client:google-api-client:1.33.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.41.5'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
	// YouTube API
	implementation 'com.google.api-client:google-api-client:1.33.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0' // YouTube 라이브러리
	implementation 'com.google.http-client:google-http-client-jackson2:1.41.5'
	// Swagger (API 문서 자동화)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// Lombok (코드 자동 생성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
